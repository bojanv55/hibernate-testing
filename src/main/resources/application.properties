# database 'test' in the user home directory ;AUTO_SERVER=TRUE to enable concurrent access to embedded db
spring.datasource.url = jdbc:h2:D:\\Java\\hibernate-testing\\baza\\test;AUTO_SERVER=TRUE
spring.datasource.username = sa
spring.datasoruce.password =

# da li hibernate da kreira bazu ili ne (brise tabele po potrebi) = none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=none
# initialize the schema on startup
# spring.jpa.generate-ddl=false
# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
# spring.jpa.properties.hibernate.hbm2ddl.auto=validate


#prikazi sql statement
logging.level.org.hibernate.SQL=debug
#prikazi sql values ispod
logging.level.org.hibernate.type.descriptor.sql=trace
# formatira upite u vise linija
spring.jpa.properties.hibernate.format_sql=true
# prikazuje komentare uz sql naredbe
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.generate_statistics=true

#millis nakon kojeg query necemo vise cekati da se izvrsi (ako je baza down, necemo cekati predugo)
spring.jpa.properties.javax.persistence.query.timeout=60000

#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
#kada ucitavamo entitete
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#kada koristimo cesto querie sa istim parametrima
#spring.jpa.properties.hibernate.cache.use_query_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class=
